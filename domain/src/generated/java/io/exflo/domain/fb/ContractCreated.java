// automatically generated by the FlatBuffers compiler, do not modify

package io.exflo.domain.fb;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ContractCreated extends Table {
  public static ContractCreated getRootAsContractCreated(ByteBuffer _bb) { return getRootAsContractCreated(_bb, new ContractCreated()); }
  public static ContractCreated getRootAsContractCreated(ByteBuffer _bb, ContractCreated obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public ContractCreated __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int pc() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public long depth() { int o = __offset(6); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public Bytes20 address() { return address(new Bytes20()); }
  public Bytes20 address(Bytes20 obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public Bytes20 creator() { return creator(new Bytes20()); }
  public Bytes20 creator(Bytes20 obj) { int o = __offset(10); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public byte code(int j) { int o = __offset(12); return o != 0 ? bb.get(__vector(o) + j * 1) : 0; }
  public int codeLength() { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer codeAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer codeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  public UInt256 amount() { return amount(new UInt256()); }
  public UInt256 amount(UInt256 obj) { int o = __offset(14); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public Bytes32 transactionHash() { return transactionHash(new Bytes32()); }
  public Bytes32 transactionHash(Bytes32 obj) { int o = __offset(16); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public byte type() { int o = __offset(18); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public byte capabilities(int j) { int o = __offset(20); return o != 0 ? bb.get(__vector(o) + j * 1) : 0; }
  public int capabilitiesLength() { int o = __offset(20); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer capabilitiesAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer capabilitiesInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }
  public ContractMetadata metadata() { return metadata(new ContractMetadata()); }
  public ContractMetadata metadata(ContractMetadata obj) { int o = __offset(22); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createContractCreated(FlatBufferBuilder builder,
      int pc,
      long depth,
      int addressOffset,
      int creatorOffset,
      int codeOffset,
      int amountOffset,
      int transactionHashOffset,
      byte type,
      int capabilitiesOffset,
      int metadataOffset) {
    builder.startObject(10);
    ContractCreated.addMetadata(builder, metadataOffset);
    ContractCreated.addCapabilities(builder, capabilitiesOffset);
    ContractCreated.addTransactionHash(builder, transactionHashOffset);
    ContractCreated.addAmount(builder, amountOffset);
    ContractCreated.addCode(builder, codeOffset);
    ContractCreated.addCreator(builder, creatorOffset);
    ContractCreated.addAddress(builder, addressOffset);
    ContractCreated.addDepth(builder, depth);
    ContractCreated.addPc(builder, pc);
    ContractCreated.addType(builder, type);
    return ContractCreated.endContractCreated(builder);
  }

  public static void startContractCreated(FlatBufferBuilder builder) { builder.startObject(10); }
  public static void addPc(FlatBufferBuilder builder, int pc) { builder.addInt(0, pc, 0); }
  public static void addDepth(FlatBufferBuilder builder, long depth) { builder.addInt(1, (int)depth, (int)0L); }
  public static void addAddress(FlatBufferBuilder builder, int addressOffset) { builder.addOffset(2, addressOffset, 0); }
  public static void addCreator(FlatBufferBuilder builder, int creatorOffset) { builder.addOffset(3, creatorOffset, 0); }
  public static void addCode(FlatBufferBuilder builder, int codeOffset) { builder.addOffset(4, codeOffset, 0); }
  public static int createCodeVector(FlatBufferBuilder builder, byte[] data) { builder.startVector(1, data.length, 1); for (int i = data.length - 1; i >= 0; i--) builder.addByte(data[i]); return builder.endVector(); }
  public static void startCodeVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static void addAmount(FlatBufferBuilder builder, int amountOffset) { builder.addOffset(5, amountOffset, 0); }
  public static void addTransactionHash(FlatBufferBuilder builder, int transactionHashOffset) { builder.addOffset(6, transactionHashOffset, 0); }
  public static void addType(FlatBufferBuilder builder, byte type) { builder.addByte(7, type, 0); }
  public static void addCapabilities(FlatBufferBuilder builder, int capabilitiesOffset) { builder.addOffset(8, capabilitiesOffset, 0); }
  public static int createCapabilitiesVector(FlatBufferBuilder builder, byte[] data) { builder.startVector(1, data.length, 1); for (int i = data.length - 1; i >= 0; i--) builder.addByte(data[i]); return builder.endVector(); }
  public static void startCapabilitiesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static void addMetadata(FlatBufferBuilder builder, int metadataOffset) { builder.addOffset(9, metadataOffset, 0); }
  public static int endContractCreated(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

