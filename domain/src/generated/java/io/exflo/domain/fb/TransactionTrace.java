// automatically generated by the FlatBuffers compiler, do not modify

package io.exflo.domain.fb;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class TransactionTrace extends Table {
  public static TransactionTrace getRootAsTransactionTrace(ByteBuffer _bb) { return getRootAsTransactionTrace(_bb, new TransactionTrace()); }
  public static TransactionTrace getRootAsTransactionTrace(ByteBuffer _bb, TransactionTrace obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public TransactionTrace __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ContractCreated contractsCreated(int j) { return contractsCreated(new ContractCreated(), j); }
  public ContractCreated contractsCreated(ContractCreated obj, int j) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int contractsCreatedLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public ContractDestroyed contractsDestroyed(int j) { return contractsDestroyed(new ContractDestroyed(), j); }
  public ContractDestroyed contractsDestroyed(ContractDestroyed obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int contractsDestroyedLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public InternalTransaction internalTransactions(int j) { return internalTransactions(new InternalTransaction(), j); }
  public InternalTransaction internalTransactions(InternalTransaction obj, int j) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int internalTransactionsLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }
  public byte status() { int o = __offset(10); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public byte revertReason(int j) { int o = __offset(12); return o != 0 ? bb.get(__vector(o) + j * 1) : 0; }
  public int revertReasonLength() { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer revertReasonAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer revertReasonInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }

  public static int createTransactionTrace(FlatBufferBuilder builder,
      int contractsCreatedOffset,
      int contractsDestroyedOffset,
      int internalTransactionsOffset,
      byte status,
      int revertReasonOffset) {
    builder.startObject(5);
    TransactionTrace.addRevertReason(builder, revertReasonOffset);
    TransactionTrace.addInternalTransactions(builder, internalTransactionsOffset);
    TransactionTrace.addContractsDestroyed(builder, contractsDestroyedOffset);
    TransactionTrace.addContractsCreated(builder, contractsCreatedOffset);
    TransactionTrace.addStatus(builder, status);
    return TransactionTrace.endTransactionTrace(builder);
  }

  public static void startTransactionTrace(FlatBufferBuilder builder) { builder.startObject(5); }
  public static void addContractsCreated(FlatBufferBuilder builder, int contractsCreatedOffset) { builder.addOffset(0, contractsCreatedOffset, 0); }
  public static int createContractsCreatedVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startContractsCreatedVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addContractsDestroyed(FlatBufferBuilder builder, int contractsDestroyedOffset) { builder.addOffset(1, contractsDestroyedOffset, 0); }
  public static int createContractsDestroyedVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startContractsDestroyedVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addInternalTransactions(FlatBufferBuilder builder, int internalTransactionsOffset) { builder.addOffset(2, internalTransactionsOffset, 0); }
  public static int createInternalTransactionsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startInternalTransactionsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addStatus(FlatBufferBuilder builder, byte status) { builder.addByte(3, status, 0); }
  public static void addRevertReason(FlatBufferBuilder builder, int revertReasonOffset) { builder.addOffset(4, revertReasonOffset, 0); }
  public static int createRevertReasonVector(FlatBufferBuilder builder, byte[] data) { builder.startVector(1, data.length, 1); for (int i = data.length - 1; i >= 0; i--) builder.addByte(data[i]); return builder.endVector(); }
  public static void startRevertReasonVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static int endTransactionTrace(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

