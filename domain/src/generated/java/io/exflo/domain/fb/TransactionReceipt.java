// automatically generated by the FlatBuffers compiler, do not modify

package io.exflo.domain.fb;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class TransactionReceipt extends Table {
  public static TransactionReceipt getRootAsTransactionReceipt(ByteBuffer _bb) { return getRootAsTransactionReceipt(_bb, new TransactionReceipt()); }
  public static TransactionReceipt getRootAsTransactionReceipt(ByteBuffer _bb, TransactionReceipt obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public TransactionReceipt __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Bytes32 stateRoot() { return stateRoot(new Bytes32()); }
  public Bytes32 stateRoot(Bytes32 obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public long cumulativeGasUsed() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public Log logs(int j) { return logs(new Log(), j); }
  public Log logs(Log obj, int j) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int logsLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }
  public byte eventsType(int j) { int o = __offset(10); return o != 0 ? bb.get(__vector(o) + j * 1) : 0; }
  public int eventsTypeLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer eventsTypeAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer eventsTypeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  public Table events(Table obj, int j) { int o = __offset(12); return o != 0 ? __union(obj, __vector(o) + j * 4 - bb_pos) : null; }
  public int eventsLength() { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; }
  public Bytes256 bloomFilter() { return bloomFilter(new Bytes256()); }
  public Bytes256 bloomFilter(Bytes256 obj) { int o = __offset(14); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public byte status() { int o = __offset(16); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public byte revertReason(int j) { int o = __offset(18); return o != 0 ? bb.get(__vector(o) + j * 1) : 0; }
  public int revertReasonLength() { int o = __offset(18); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer revertReasonAsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public ByteBuffer revertReasonInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 18, 1); }

  public static int createTransactionReceipt(FlatBufferBuilder builder,
      int stateRootOffset,
      long cumulativeGasUsed,
      int logsOffset,
      int events_typeOffset,
      int eventsOffset,
      int bloomFilterOffset,
      byte status,
      int revertReasonOffset) {
    builder.startObject(8);
    TransactionReceipt.addCumulativeGasUsed(builder, cumulativeGasUsed);
    TransactionReceipt.addRevertReason(builder, revertReasonOffset);
    TransactionReceipt.addBloomFilter(builder, bloomFilterOffset);
    TransactionReceipt.addEvents(builder, eventsOffset);
    TransactionReceipt.addEventsType(builder, events_typeOffset);
    TransactionReceipt.addLogs(builder, logsOffset);
    TransactionReceipt.addStateRoot(builder, stateRootOffset);
    TransactionReceipt.addStatus(builder, status);
    return TransactionReceipt.endTransactionReceipt(builder);
  }

  public static void startTransactionReceipt(FlatBufferBuilder builder) { builder.startObject(8); }
  public static void addStateRoot(FlatBufferBuilder builder, int stateRootOffset) { builder.addOffset(0, stateRootOffset, 0); }
  public static void addCumulativeGasUsed(FlatBufferBuilder builder, long cumulativeGasUsed) { builder.addLong(1, cumulativeGasUsed, 0L); }
  public static void addLogs(FlatBufferBuilder builder, int logsOffset) { builder.addOffset(2, logsOffset, 0); }
  public static int createLogsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startLogsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addEventsType(FlatBufferBuilder builder, int eventsTypeOffset) { builder.addOffset(3, eventsTypeOffset, 0); }
  public static int createEventsTypeVector(FlatBufferBuilder builder, byte[] data) { builder.startVector(1, data.length, 1); for (int i = data.length - 1; i >= 0; i--) builder.addByte(data[i]); return builder.endVector(); }
  public static void startEventsTypeVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static void addEvents(FlatBufferBuilder builder, int eventsOffset) { builder.addOffset(4, eventsOffset, 0); }
  public static int createEventsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startEventsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addBloomFilter(FlatBufferBuilder builder, int bloomFilterOffset) { builder.addOffset(5, bloomFilterOffset, 0); }
  public static void addStatus(FlatBufferBuilder builder, byte status) { builder.addByte(6, status, 0); }
  public static void addRevertReason(FlatBufferBuilder builder, int revertReasonOffset) { builder.addOffset(7, revertReasonOffset, 0); }
  public static int createRevertReasonVector(FlatBufferBuilder builder, byte[] data) { builder.startVector(1, data.length, 1); for (int i = data.length - 1; i >= 0; i--) builder.addByte(data[i]); return builder.endVector(); }
  public static void startRevertReasonVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static int endTransactionReceipt(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

