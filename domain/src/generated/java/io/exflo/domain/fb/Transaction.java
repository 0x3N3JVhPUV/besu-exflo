// automatically generated by the FlatBuffers compiler, do not modify

package io.exflo.domain.fb;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Transaction extends Table {
  public static Transaction getRootAsTransaction(ByteBuffer _bb) { return getRootAsTransaction(_bb, new Transaction()); }
  public static Transaction getRootAsTransaction(ByteBuffer _bb, Transaction obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public Transaction __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Bytes32 hash() { return hash(new Bytes32()); }
  public Bytes32 hash(Bytes32 obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public Bytes20 from() { return from(new Bytes20()); }
  public Bytes20 from(Bytes20 obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public long nonce() { int o = __offset(8); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public UInt256 gasPrice() { return gasPrice(new UInt256()); }
  public UInt256 gasPrice(UInt256 obj) { int o = __offset(10); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public long gasLimit() { int o = __offset(12); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public Bytes20 to() { return to(new Bytes20()); }
  public Bytes20 to(Bytes20 obj) { int o = __offset(14); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public UInt256 value() { return value(new UInt256()); }
  public UInt256 value(UInt256 obj) { int o = __offset(16); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public byte payload(int j) { int o = __offset(18); return o != 0 ? bb.get(__vector(o) + j * 1) : 0; }
  public int payloadLength() { int o = __offset(18); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer payloadAsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public ByteBuffer payloadInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 18, 1); }
  public UInt256 chainId() { return chainId(new UInt256()); }
  public UInt256 chainId(UInt256 obj) { int o = __offset(20); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public Signature signature() { return signature(new Signature()); }
  public Signature signature(Signature obj) { int o = __offset(22); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public TransactionReceipt receipt() { return receipt(new TransactionReceipt()); }
  public TransactionReceipt receipt(TransactionReceipt obj) { int o = __offset(24); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public TransactionTrace trace() { return trace(new TransactionTrace()); }
  public TransactionTrace trace(TransactionTrace obj) { int o = __offset(26); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public UInt256 fee() { return fee(new UInt256()); }
  public UInt256 fee(UInt256 obj) { int o = __offset(28); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public Bytes20 contractAddress() { return contractAddress(new Bytes20()); }
  public Bytes20 contractAddress(Bytes20 obj) { int o = __offset(30); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createTransaction(FlatBufferBuilder builder,
      int hashOffset,
      int fromOffset,
      long nonce,
      int gasPriceOffset,
      long gasLimit,
      int toOffset,
      int valueOffset,
      int payloadOffset,
      int chainIdOffset,
      int signatureOffset,
      int receiptOffset,
      int traceOffset,
      int feeOffset,
      int contractAddressOffset) {
    builder.startObject(14);
    Transaction.addGasLimit(builder, gasLimit);
    Transaction.addNonce(builder, nonce);
    Transaction.addContractAddress(builder, contractAddressOffset);
    Transaction.addFee(builder, feeOffset);
    Transaction.addTrace(builder, traceOffset);
    Transaction.addReceipt(builder, receiptOffset);
    Transaction.addSignature(builder, signatureOffset);
    Transaction.addChainId(builder, chainIdOffset);
    Transaction.addPayload(builder, payloadOffset);
    Transaction.addValue(builder, valueOffset);
    Transaction.addTo(builder, toOffset);
    Transaction.addGasPrice(builder, gasPriceOffset);
    Transaction.addFrom(builder, fromOffset);
    Transaction.addHash(builder, hashOffset);
    return Transaction.endTransaction(builder);
  }

  public static void startTransaction(FlatBufferBuilder builder) { builder.startObject(14); }
  public static void addHash(FlatBufferBuilder builder, int hashOffset) { builder.addOffset(0, hashOffset, 0); }
  public static void addFrom(FlatBufferBuilder builder, int fromOffset) { builder.addOffset(1, fromOffset, 0); }
  public static void addNonce(FlatBufferBuilder builder, long nonce) { builder.addLong(2, nonce, 0L); }
  public static void addGasPrice(FlatBufferBuilder builder, int gasPriceOffset) { builder.addOffset(3, gasPriceOffset, 0); }
  public static void addGasLimit(FlatBufferBuilder builder, long gasLimit) { builder.addLong(4, gasLimit, 0L); }
  public static void addTo(FlatBufferBuilder builder, int toOffset) { builder.addOffset(5, toOffset, 0); }
  public static void addValue(FlatBufferBuilder builder, int valueOffset) { builder.addOffset(6, valueOffset, 0); }
  public static void addPayload(FlatBufferBuilder builder, int payloadOffset) { builder.addOffset(7, payloadOffset, 0); }
  public static int createPayloadVector(FlatBufferBuilder builder, byte[] data) { builder.startVector(1, data.length, 1); for (int i = data.length - 1; i >= 0; i--) builder.addByte(data[i]); return builder.endVector(); }
  public static void startPayloadVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static void addChainId(FlatBufferBuilder builder, int chainIdOffset) { builder.addOffset(8, chainIdOffset, 0); }
  public static void addSignature(FlatBufferBuilder builder, int signatureOffset) { builder.addOffset(9, signatureOffset, 0); }
  public static void addReceipt(FlatBufferBuilder builder, int receiptOffset) { builder.addOffset(10, receiptOffset, 0); }
  public static void addTrace(FlatBufferBuilder builder, int traceOffset) { builder.addOffset(11, traceOffset, 0); }
  public static void addFee(FlatBufferBuilder builder, int feeOffset) { builder.addOffset(12, feeOffset, 0); }
  public static void addContractAddress(FlatBufferBuilder builder, int contractAddressOffset) { builder.addOffset(13, contractAddressOffset, 0); }
  public static int endTransaction(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

