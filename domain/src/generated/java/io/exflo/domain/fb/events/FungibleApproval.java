// automatically generated by the FlatBuffers compiler, do not modify

package io.exflo.domain.fb.events;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FungibleApproval extends Table {
  public static FungibleApproval getRootAsFungibleApproval(ByteBuffer _bb) { return getRootAsFungibleApproval(_bb, new FungibleApproval()); }
  public static FungibleApproval getRootAsFungibleApproval(ByteBuffer _bb, FungibleApproval obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public FungibleApproval __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public io.exflo.domain.fb.Bytes20 contract() { return contract(new io.exflo.domain.fb.Bytes20()); }
  public io.exflo.domain.fb.Bytes20 contract(io.exflo.domain.fb.Bytes20 obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public io.exflo.domain.fb.Bytes20 owner() { return owner(new io.exflo.domain.fb.Bytes20()); }
  public io.exflo.domain.fb.Bytes20 owner(io.exflo.domain.fb.Bytes20 obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public io.exflo.domain.fb.Bytes20 spender() { return spender(new io.exflo.domain.fb.Bytes20()); }
  public io.exflo.domain.fb.Bytes20 spender(io.exflo.domain.fb.Bytes20 obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public io.exflo.domain.fb.UInt256 value() { return value(new io.exflo.domain.fb.UInt256()); }
  public io.exflo.domain.fb.UInt256 value(io.exflo.domain.fb.UInt256 obj) { int o = __offset(10); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createFungibleApproval(FlatBufferBuilder builder,
      int contractOffset,
      int ownerOffset,
      int spenderOffset,
      int valueOffset) {
    builder.startObject(4);
    FungibleApproval.addValue(builder, valueOffset);
    FungibleApproval.addSpender(builder, spenderOffset);
    FungibleApproval.addOwner(builder, ownerOffset);
    FungibleApproval.addContract(builder, contractOffset);
    return FungibleApproval.endFungibleApproval(builder);
  }

  public static void startFungibleApproval(FlatBufferBuilder builder) { builder.startObject(4); }
  public static void addContract(FlatBufferBuilder builder, int contractOffset) { builder.addOffset(0, contractOffset, 0); }
  public static void addOwner(FlatBufferBuilder builder, int ownerOffset) { builder.addOffset(1, ownerOffset, 0); }
  public static void addSpender(FlatBufferBuilder builder, int spenderOffset) { builder.addOffset(2, spenderOffset, 0); }
  public static void addValue(FlatBufferBuilder builder, int valueOffset) { builder.addOffset(3, valueOffset, 0); }
  public static int endFungibleApproval(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

